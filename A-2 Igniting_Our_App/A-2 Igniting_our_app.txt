### What is 'NPM'?
NPM is a package manager for JavaScript that is used for managing dependencies of JavaScript applications. It was originally developed as a package manager for Node.js, but it has evolved to handle front-end and back-end packages for JavaScript projects.It is a tool that allows developers to install, update, and manage libraries and dependencies for their Node.js projects. It also provides a registry where developers can publish and share their own packages.

### What is 'Parcel/Webpack'? Why do we need it?
Parcel and Webpack are module bundlers for JavaScript applications. They take modules with dependencies and bundle them into static assets that can be served to the browser. We need them to optimize our code for production, handle complex dependency graphs, and support modern JavaScript features like ES6 modules.

### What is .parcel-cache?
.parcel-cache is a directory created by Parcel to store cache files that speed up subsequent builds by reusing work that’s already been done.

### What is npx?
npx is a tool that comes with NPM (version 5.2.0 and higher). It allows you to run Node.js packages directly from the registry without having to install them globally or locally, simplifying the execution of one-off commands.

### What is the difference between dependencies vs devDependencies?
- *Dependencies* are packages required for the application to run in production.
- *devDependencies* are packages needed only during development and testing, such as testing frameworks or build tools.

### What is Tree Shaking?
Tree shaking is a process of removing dead code (unused exports) from the final bundle, reducing the overall size of the output files.

### What is Hot Module Replacement (HMR)?
HMR is a feature that allows modules to be updated in the browser at runtime without needing a full refresh. This improves development speed and preserves application state.

### List down your favorite 5 superpowers of Parcel and describe any 3 of them in your own words.
1. *Zero Configuration*: Parcel requires no configuration out of the box, making it extremely easy to get started.
2. *Fast Bundling*: Leveraging multicore processing, Parcel is designed to be fast.
3. *Hot Module Replacement (HMR)*: Speeds up development by allowing modules to update without a full page reload.
4. *Built-in Caching*: Speeds up subsequent builds by caching intermediate results.
5. *Automatic Code Splitting*: Optimizes loading by splitting code into smaller bundles.

    1. Dev builds
    2. local server
    3. HMR = Hot Module Replacement
    4. File Watching Algorithms - written in c++ - on every save it create build for us.
    5. Caching - Faster Builds
    6. Image Optomization
    7. Minification
    8. Bundling
    9. Compress of our files
    10. Consistent Hashing
    11. Code Splitting
    12. Differential Bundling:- supports older browsers
    13. Diagnostics
    14. Error handling
    15. HTTPS- parcel has that feture as well
    16. Zero configuration
    17. Tree Shaking - remove unused code
    18. Different dev and prod bundles

### What is .gitignore? What should we add and not add into it?
.gitignore is a file specifying which files and directories to ignore in a Git repository. We should add files that are not meant to be shared, such as configuration files, build artifacts, and node_modules. We should not add source code or files necessary for the application to run.

### What is the difference between package.json and package-lock.json?
- *package.json*: Contains metadata about the project and its dependencies.
- *package-lock.json*: Records the exact versions of dependencies installed, ensuring consistent installations across different environments.

### Why should I not modify package-lock.json?
Modifying package-lock.json can lead to inconsistencies and errors in dependency resolution, breaking the guarantee of identical environments across different installations.

### What is node_modules? Is it a good idea to push that on Git?
node_modules is a directory where NPM installs all the project's dependencies. It is not a good idea to push node_modules to Git because it is large and can be regenerated from package.json and package-lock.json.

### What is the 'dist' folder?
The dist (distribution) folder contains the final, compiled, and minified version of your project ready for production deployment.

### What is 'browserslist'?
Browserslist is a tool that allows specifying which browsers should be supported by your project, helping to configure tools like Babel and Autoprefixer to ensure compatibility.

### Read about different bundlers: Vite, Webpack, Parcel
- *Vite*: A next-generation frontend tooling providing a fast dev server and optimized build using Rollup.
- *Webpack*: A highly configurable module bundler with a vast ecosystem, used for transforming and bundling resources.
- *Parcel*: A zero-config bundler with built-in features for fast development and production builds.

### Read about: ^ - caret and ~ - tilde
carrit updates the minor versions but tilde updates the major versions.

~version “Approximately equivalent to version”, will automatically update you to all future patch versions that are backwards-compatible, without incrementing the minor version. ~1.2.3 will use releases from 1.2.3 to < 1.3.0.

^version “Compatible with version”, will automatically update you to all future minor/patch versions that are backwards-compatible, without incrementing the major version. ^1.2.3 will use releases from 1.2.3 to < 2.0.0.

### Read about Script types in HTML (MDN Docs)
HTML script types define how the script should be interpreted by the browser, such as text/javascript, module, or nomodule. They help control the loading and execution of scripts in the document.