* package.json is a configuration for npm.
* Two types of dependencies:-
1) dev dependencies:-Development phase
2) normal dependencies:- Used in production phase.

* What's the difference between tilde(~) and caret(^) in package.json?
carrit updates the minor versions but tilde updates the major versions.

~version “Approximately equivalent to version”, will automatically update you to all future patch versions that are backwards-compatible, without incrementing the minor version. ~1.2.3 will use releases from 1.2.3 to < 1.3.0.

^version “Compatible with version”, will automatically update you to all future minor/patch versions that are backwards-compatible, without incrementing the major version. ^1.2.3 will use releases from 1.2.3 to < 2.0.0.

* what is package-lock.json?
The "package-lock. json" file in npm simply serves as a lockfile that captures the exact versions of packages and their dependencies. It ensures that the same versions of packages are used across different installations or environments.

* transetive dependencies:- dependencies and dependent on other dependencies.
eg. parcel as its own dependency.and those dependencies has its own dependencies.So that's why node module is big in size when we install even single dependencies.

* npx:- excuting a package

* parcel doing for us:-
    1. Dev builds
    2. local server
    3. HMR = Hot Module Replacement
    4. File Watching Algorithms - written in c++ - on every save it create build for us.
    5. Caching - Faster Builds
    6. Image Optomization
    7. Minification
    8. Bundling
    9. Compress of our files
    10. Consistent Hashing
    11. Code Splitting
    12. Differential Bundling:- supports older browsers
    13. Diagnostics
    14. Error handling
    15. HTTPS- parcel has that feture as well
    16. Zero configuration
    17. Tree Shaking - remove unused code
    18. Different dev and prod bundles

* Prod build command-
npx parcel build index.html








