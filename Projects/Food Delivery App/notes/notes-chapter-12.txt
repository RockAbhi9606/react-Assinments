--Redux Architecture:-

redux store js object and kept in (central space) global space.


slice-

cartSlice
userSlice
wishlistSlice


write data: Click Add: dispatch(action) => reducer function => update redux store

read data : selector use to read the data => update react component

subscribind to the store



redux toolKit:

-Install @reduxjs/toolkit and react-redux
-Build our store
-Connect our store to the app
-slice (cartSlice)
-dispatch action
-Selector


onClick={handleClick}
onClick={handleClick(item)}
onClick={()=>handleClick(item)}


onClick={handleClick}

This syntax passes the handleClick function as a reference to the onClick event handler. When the button is clicked, the handleClick function will be invoked without any arguments.

function handleClick() {
  console.log('Button clicked');
}

<button onClick={handleClick}>Click Me</button>
onClick={handleClick(item)}

This syntax immediately invokes the handleClick function with the argument item when the component renders, not when the button is clicked. This is generally not the desired behavior for event handling because it results in the function being called during the render phase.

function handleClick(item) {
  console.log('Button clicked', item);
}

const item = 'Item1';
<button onClick={handleClick(item)}>Click Me</button> // This will call handleClick(item) immediately when rendering
onClick={() => handleClick(item)}

This syntax creates an anonymous function that calls handleClick with item when the button is clicked. This is the correct way to pass arguments to event handlers in React.

function handleClick(item) {
  console.log('Button clicked', item);
}

const item = 'Item1';
<button onClick={() => handleClick(item)}>Click Me</button>
In summary:

onClick={handleClick}: Passes the function reference, the function is called on click.
onClick={handleClick(item)}: Invokes the function immediately during render, which is typically not what you want.
onClick={() => handleClick(item)}: Creates a new function that calls handleClick(item) on click, which is the correct approach for passing arguments.
